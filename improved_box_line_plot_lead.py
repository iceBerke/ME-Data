import matplotlib.pyplot as plt
import numpy as np
from pathlib import Path

# Data
lead_200_0h = [42.70850363, 46.59109487, 34.25815799, 34.25815799, 33.27935348, 33.81611725, 22.54407816, 58.23886859, 48.53239049, 36.39929287, 29.11943429, 19.4129562, 34.62851646, 45.29689779]
print(np.mean(lead_200_0h))
lead_200_1h = [83.82600592, 50.47587454, 28.65846356, 0, 52.5967096, 12.77348662, 15.96685827, 7.708138476, 20.95650148, 41.91300296, 36.0541961, 89.41440632, 53.95696933, 98.77172791, 95.00280671, 74.51200527, 80.85345252]
print(np.mean(lead_200_1h))
lead_200_4h = [37.4134662, 16.49246673, 10.4006547, 37.4134662, 6.012878496, 16.03434266, 13.74372228, 17.10329883, 0, 0, 5.497488911, 0, 25.09723198, 12.28162416, 8.017171328, 8.949400553]
print(np.mean(lead_200_4h))
lead_200_24h = [16.08111391, 21.9401244, 15.72375582, 20.07287977, 38.04134473, 22.82480684, 26.2062597, 0, 14.74102108, 0, 18.86850699, 30.76387009, 36.28559036, 36.28559036, 51.27311681, 35.89118177]
print(lead_200_24h)

lead_100_0h = [50.36875121, 49.04325776, 66.55870696, 63.87488813, 40.63176878, 31.76665559, 46.59109487, 18.9614921, 37.06109819, 26.472213, 60.39586372, 46.59109487]
print(np.mean(lead_100_0h))
lead_100_1h = [173.0601413, 175.2039043, 115.1549172, 131.491774, 120.8302788, 92.68566509, 62.09333772, 62.09333772, 120.8302788, 135.2981148, 193.3284461, 210.7625292]
print(np.mean(lead_100_1h))
lead_100_4h = [96.20605594, 111.9488651, 71.04447208, 51.69280618, 89.79231888, 85.51649417, 94.5182304, 80.46324679, 110.5346175, 123.9989165, 96.20605594, 99.90628886, 106.0230004]
print(np.mean(lead_100_4h))
lead_100_24h = [85.17034404, 100.0602643, 69.36951098, 111.7214229, 101.9919297, 81.32977149, 119.9970839, 148.3612444, 121.8591076, 108.4939152, 84.90828144, 99.30793151, 84.55227187]
print(np.mean(lead_100_24h))

lead_50_0h = [84.854045, 73.28303887, 94.83687383, 113.9958382, 123.1155053, 64.4890742, 83.75204442, 62.81403331, 57.57953054, 109.9245583, 109.9245583, 122.9263878]
print(np.mean(lead_50_0h))
lead_50_1h = [67.93959346, 93.32361738, 71.36511918, 45.49526348, 60.6603513, 83.00890178, 129.6876476, 158.9719551, 84.3970105, 83.00890178, 126.3757319, 65.71538058, 97.05656208, 97.05656208, 121.3207026, 94.36054647]
print(np.mean(lead_50_1h))
lead_50_4h = [86.31103122, 79.49700244, 52.67186008, 50.10250105, 70.1625157, 83.07436755, 62.65541526, 69.04882498, 71.84810167, 58.78481045, 54.92520169, 60.41772186, 78.54303841, 57.90031678, 49.22925485, 60.41772186]
print(np.mean(lead_50_4h))
lead_50_24h = [116.8722137, 99.95649858, 80.52051274, 90.86954416, 76.02325244, 90.15684186, 99.95649858, 80.66664798, 89.24687373, 74.0418508, 126.4755696, 170.7590184, 122.3957125, 142.2457864, 109.7561553]
print(lead_50_24h)

lead_10_0h = [66.62094442, 73.28303887, 62.81403331, 57.57953054, 87.93964664, 87.93964664, 73.28303887, 85.49687868, 54.96227915, 97.71071849, 99.93141664, 161.9940859, 161.9940859]
print(np.mean(lead_10_0h))
lead_10_1h = [85.93549768, 54.38514254, 50.55029275, 53.52383938, 83.19133893, 85.63814301, 68.24289521, 64.22860726, 92.77465493, 113.7381587, 101.1005855, 113.7381587]
print(np.mean(lead_10_1h))
lead_10_4h = [93.37284287, 96.66835497, 120.8354437, 126.5895125, 56.10217029, 73.36437654, 75.52215232, 73.23360225, 56.64161424, 58.94411888, 60.41772186, 69.41610596, 64.27417219, 80.55696247]
print(np.mean(lead_10_4h))
lead_10_24h = [95.79164447, 106.3367006, 111.5793473, 92.98278938, 142.1603535, 151.0453756, 113.676018, 92.26753715, 163.5651795, 108.2862068, 134.6352838, 116.2284867, 109.043453]
print(np.mean(lead_10_24h))

# Standard Errors

se_lead_200_0h = [2.354210748, 2.568229907, 1.888404344, 1.888404344, 1.834449934, 1.864037836, 1.242691891, 3.210287384, 2.675239487, 2.006429615, 1.605143692, 1.070095795, 1.908819526, 2.496890188]
se_lead_200_1h = [6.253043194, 3.765273321, 2.137792545, 0, 3.923478082, 0.952844677, 1.191055846, 0.574992478, 1.563260798, 3.126521597, 2.689480944, 6.66991274, 4.024947343, 7.367926864, 7.086782286, 5.558260617, 6.031304074]
se_lead_200_4h = [3.21021158, 1.415113676, 0.89241403, 3.21021158, 0.515926861, 1.375804963, 1.179261397, 1.467525294, 0, 0, 0.471704559, 0, 2.153433855, 1.053808057, 0.687902481, 0.767891142]
se_lead_200_24h = [0.822942241, 1.122773911, 0.804654636, 1.027218684, 1.946745087, 1.168047052, 1.34109106, 0, 0.754363721, 0, 0.965585563, 1.574324288, 1.856895314, 1.856895314, 2.623873813, 1.836711669]

se_lead_100_0h = [2.776464765, 2.703399903, 3.668899868, 3.520960357, 2.239735384, 1.751065846, 2.568229907, 1.045209846, 2.042910154, 1.459221538, 3.329186917, 2.568229907]
se_lead_100_1h = [12.90950853, 13.06942361, 8.590039135, 9.808695206, 9.013395595, 6.913933938, 4.631883847, 4.631883847, 9.013395595, 10.09263112, 14.42143295, 15.72193717]
se_lead_100_4h = [8.254829777, 9.605620104, 6.095874297, 4.435430925, 7.704507792, 7.337626468, 8.110008202, 6.90403945, 9.484272509, 10.63955838, 8.254829777, 8.57232323, 9.097159346]
se_lead_100_24h = [4.358545945, 5.120529502, 3.549946924, 5.717282941, 5.219381423, 4.162006738, 6.140785381, 7.59230584, 6.23607343, 5.552116989, 4.345135035, 5.082029281, 4.326916439]

se_lead_50_0h = [6.790172545, 5.864239925, 7.589016374, 9.122150995, 9.851923074, 5.160531134, 6.701988486, 5.026491365, 4.607617084, 8.796359888, 8.796359888, 9.836789552]
se_lead_50_1h = [4.173248628, 5.732484379, 4.383664525, 2.794586135, 3.726114846, 5.098894, 7.966176568, 9.764990632, 5.184159786, 5.098894, 7.762739263, 4.036624417, 5.961783754, 5.961783754, 7.452229693, 5.79617865]
se_lead_50_4h = [4.7290584, 4.355711684, 2.885938203, 2.74516073, 3.844266828, 4.55171871, 3.432946098, 3.78324672, 3.936621587, 3.220872207, 3.0094008, 3.31034088, 4.303443144, 3.17241001, 2.697314791, 3.31034088]
se_lead_50_24h = [8.512728318, 7.280622903, 5.864946228, 6.618748094, 5.537375166, 6.566836344, 7.280622903, 5.875590413, 6.500556164, 5.393054002, 9.212216735, 12.43773079, 8.915048453, 10.36088644, 7.994409462]

se_lead_10_0h = [5.331127205, 5.864239925, 5.026491365, 4.607617084, 7.03708791, 7.03708791, 5.864239925, 6.841613246, 4.398179944, 7.818986567, 7.996690807, 12.96305668, 12.96305668]
se_lead_10_1h = [5.278662699, 3.34065469, 3.105095705, 3.287748394, 5.110100361, 5.26039743, 4.191879202, 3.945298073, 5.698763883, 6.986465337, 6.21019141, 6.986465337]
se_lead_10_4h = [5.11598136, 5.296545408, 6.62068176, 6.93595232, 3.07388796, 4.01969964, 4.1379261, 4.0125344, 3.103444575, 3.229600858, 3.31034088, 3.803370373, 3.521639234, 4.41378784]
se_lead_10_24h = [6.977263616, 7.745343514, 8.127206962, 6.772672468, 10.35466368, 11.00183016, 8.279924086, 6.720574988, 11.91374657, 7.887341478, 9.806553298, 8.465840585, 7.942497713]

times = np.array([0.1, 1.5, 4, 24])

# Means calculated 
means = {
    '100 mg/L': [
        np.mean(lead_200_0h),
        np.mean(lead_200_1h),
        np.mean(lead_200_4h),
        np.mean(lead_200_24h),
    ],
    '50 mg/L': [
        np.mean(lead_100_0h),
        np.mean(lead_100_1h),
        np.mean(lead_100_4h),
        np.mean(lead_100_24h),
    ],
    '25 mg/L': [
        np.mean(lead_50_0h),
        np.mean(lead_50_1h),
        np.mean(lead_50_4h),
        np.mean(lead_50_24h),
    ],
    '5 mg/L': [
        np.mean(lead_10_0h),
        np.mean(lead_10_1h),
        np.mean(lead_10_4h),
        np.mean(lead_10_24h),
    ]
}

def combined_se(se_list):
    se_array = np.array(se_list)
    n = len(se_array)
    return np.sqrt(np.sum(se_array**2)) / n

ses = {
    '100 mg/L': [
        combined_se(se_lead_200_0h),
        combined_se(se_lead_200_1h),
        combined_se(se_lead_200_4h),
        combined_se(se_lead_200_24h),
    ],
    '50 mg/L': [
        combined_se(se_lead_100_0h),
        combined_se(se_lead_100_1h),
        combined_se(se_lead_100_4h),
        combined_se(se_lead_100_24h),
    ],
    '25 mg/L': [
        combined_se(se_lead_50_0h),
        combined_se(se_lead_50_1h),
        combined_se(se_lead_50_4h),
        combined_se(se_lead_50_24h),
    ],
    '5 mg/L': [
        combined_se(se_lead_10_0h),
        combined_se(se_lead_10_1h),
        combined_se(se_lead_10_4h),
        combined_se(se_lead_10_24h),
    ],
}

# Calculate medians
medians = {
    '100 mg/L': [
        np.median(lead_200_0h),
        np.median(lead_200_1h),
        np.median(lead_200_4h),
        np.median(lead_200_24h),
    ],
    '50 mg/L': [
        np.median(lead_100_0h),
        np.median(lead_100_1h),
        np.median(lead_100_4h),
        np.median(lead_100_24h),
    ],
    '25 mg/L': [
        np.median(lead_50_0h),
        np.median(lead_50_1h),
        np.median(lead_50_4h),
        np.median(lead_50_24h),
    ],
    '5 mg/L': [
        np.median(lead_10_0h),
        np.median(lead_10_1h),
        np.median(lead_10_4h),
        np.median(lead_10_24h),
    ],
}

#print(medians)

# Save data
output_dir = Path(r"C:\Users\asus\OneDrive\Documents\MEBiom\TU\ME_part2\Plots\Motility_Plots")  # Change this to your desired folder path
output_dir.mkdir(parents=True, exist_ok=True)  # Create directory if it doesn't exist

output_filename = "lead_motility_summary.txt"
output_path = output_dir / output_filename

with open(output_path, 'w') as f:
    f.write(f"{'Concentration':<16}{'Time(h)':<16}{'Mean':<16}{'SE':<16}{'Median'}\n")
    for conc in means:
        for t_idx, t in enumerate(times):
            f.write(f"{conc:<15}\t{t:<10}\t{means[conc][t_idx]:<10.2f}\t{ses[conc][t_idx]:<10.2f}\t{medians[conc][t_idx]:.2f}\n")

print(f"File saved at: {output_path.resolve()}")

# Plot data
colors = {
    '100 mg/L': 'blue',
    '50 mg/L': 'green',
    '25 mg/L': 'red',
    '5 mg/L': 'gold',
}

plt.figure(figsize=(14, 8))

for group in means:
    mean_vals = np.array(means[group])
    ci_margins = 1.96 * np.array(ses[group])  # 95% CI margins
    
    plt.plot(times, mean_vals, marker='o', label=group, color=colors[group])
    plt.fill_between(times, mean_vals - ci_margins, mean_vals + ci_margins, 
                     alpha=0.3, color=colors[group])

plt.title('Fraction of motile cells in lead chloride relative to control', fontsize=20)
plt.xlabel('Time (hours)', fontsize=18)
plt.ylabel('Percentage of motile cells relative to control (%)', fontsize=18)
plt.xticks(times, ['0.1h', '1.5h', '4h', '24h'], fontsize=14)
plt.yticks(fontsize=14)
plt.legend(title='Lead Chloride Group')
plt.grid(True)
plt.show()
