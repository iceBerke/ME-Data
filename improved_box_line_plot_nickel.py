import matplotlib.pyplot as plt
import numpy as np
from pathlib import Path

# Data

nickel_200_0h = [57.17488308, 49.35300277, 59.41161477, 37.20819432, 90.60594845, 59.94096354, 84.01642492, 76.28849905, 47.75539901, 49.50967897, 35.12511008, 44.89219596, 27.21736279, 30.47706369]
nickel_200_1h = [4.819502837, 0, 7.599985242, 0, 0, 0, 0, 3.710790916, 0, 0, 5.099344937, 0]
nickel_200_4h = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
nickel_200_24h = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

nickel_100_0h = [63.96384699, 72.20161517, 74.87574906, 47.60546055, 63.63532184, 66.64764477, 65.70004793, 62.38219551, 56.50561187, 69.00685343, 59.34379329, 54.39404192, 52.05953368]
nickel_100_1h = [25.49672468, 21.26632642, 30.66200943, 28.68381527, 20.26662731, 26.94540222, 37.24390674, 9.698140677, 15.29803481, 24.39501436, 33.63397724, 42.49454114, 28.74176237, 36.59252154]
nickel_100_4h = [0, 0, 0, 0, 0, 13.33588204, 6.918615496, 0, 0, 0, 8.847844817, 0]
nickel_100_24h = [19.68399032, 13.63227808, 0, 0, 4.808646036, 0, 0, 0, 0, 4.680415475, 0, 0]

nickel_50_0h = [146.2412805, 117.2893343, 140.1639945, 83.0954596, 135.8196611, 115.7442054, 104.810606, 130.2831527, 90.7478042, 101.8045065, 45.02162025, 70.68554031, 43.40407701, 45.22225136]
nickel_50_1h = [33.43701837, 59.338934, 33.43701837, 49.21804105, 60.09626274, 35.26918376, 36.95670451, 56.67799526, 51.77344779, 32.03851189, 37.95553436, 27.09366118, 26.33165196, 33.33120502, 23.19504878]
nickel_50_4h = [52.27232816, 51.85965188, 72.79733837, 64.31080373, 55.19044357, 34.45221629, 34.80376951, 30.31795033, 44.21367757, 42.65512493, 49.21745184, 49.21745184, 47.04509534, 41.41796493, 82.49782403]
nickel_50_24h = [17.57638384, 20.27451294, 25.34314118, 34.71901573, 18.4903558, 23.48876499, 4.567775643, 26.66878241, 13.3343912, 38.95440127, 37.68414906, 21.90800451, 15.27287098, 32.55344332, 36.4941233]

nickel_10_0h = [142.1270757, 105.0504473, 101.3228507, 123.273484, 144.0095535, 83.31587196, 92.9292418, 142.6866311, 71.34331556, 111.7607181, 79.54437158, 90.01381461]
nickel_10_1h = [73.75812875, 53.81651496, 67.14046716, 50.92126079, 80.24884408, 107.7760639, 108.5183232, 102.1948308, 70.89290913, 71.18849072, 92.50241009, 65.62405474, 97.69424497, 102.1948308, 117.5318371, 90.37926747]
nickel_10_4h = [65.53692271, 91.96867779, 68.90443257, 71.55460306, 115.2867043, 81.77040546, 120.8324107, 94.74359479, 90.55140033, 91.68734979, 123.4667661, 120.0371337, 96.20118855, 111.9333609, 114.9348527]
nickel_10_24h = [107.6689973, 121.4533721, 109.7133454, 119.8162688, 128.8141825, 57.12324749, 93.34073843, 115.1043065, 156.7738501, 132.6152568, 120.121039, 87.43383706, 68.36223096, 77.71896628, 102.6506142]

# Standard Errors

se_nickel_200_0h = [3.124803872, 2.697311229, 3.247048947, 2.033555705, 4.951926498, 3.275979676, 4.591786389, 4.169428679, 2.609996693, 2.705874122, 1.919707992, 2.453512805, 1.487522423, 1.665676281]
se_nickel_200_1h = [0.254366006, 0, 0.401115624, 0, 0, 0, 0, 0.195849882, 0, 0, 0.269135645, 0]
se_nickel_200_4h = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
se_nickel_200_24h = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

se_nickel_100_0h = [3.495844084, 3.946066428, 4.092217037, 2.601802041, 3.477889055, 3.642522857, 3.590733432, 3.409401394, 3.0882259, 3.771461719, 3.24334227, 2.972821345, 2.845232446]
se_nickel_100_1h = [1.345678224, 1.122404258, 1.618294071, 1.513888002, 1.069641665, 1.422137214, 1.965676568, 0.511853067, 0.807406934, 1.287531634, 1.775149997, 2.242797039, 1.516946361, 1.931297451]
se_nickel_100_4h = [0, 0, 0, 0, 0, 1.267745586, 0.657702597, 0, 0, 0, 0.841100437, 0]
se_nickel_100_24h = [1.000273667, 0.692746164, 0, 0, 0.244359092, 0, 0, 0, 0, 0.23784285, 0, 0]

se_nickel_50_0h = [10.0926302, 8.094553555, 9.673215105, 5.73471281, 9.373397223, 7.987918718, 7.233352195, 8.991303115, 6.26282829, 7.025890586, 3.107101924, 4.878260201, 2.995469519, 3.120948189]
se_nickel_50_1h = [2.783160059, 4.939129119, 2.783160059, 4.096707564, 5.002166052, 2.93566198, 3.076124276, 4.717643508, 4.309409124, 2.666754125, 3.15926277, 2.255165064, 2.191738547, 2.774352591, 1.930660582]
se_nickel_50_4h = [5.033387432, 4.993650163, 7.009774022, 6.19259181, 5.314377507, 3.317459898, 3.35131153, 2.91936471, 4.257406869, 4.107331303, 4.739228426, 4.739228426, 4.530048689, 3.988203156, 7.943849552]
se_nickel_50_24h = [0.830006198, 0.957419431, 1.196774288, 1.639529411, 0.873166521, 1.109205438, 0.215703192, 1.25937479, 0.629687395, 1.839536209, 1.779551333, 1.034557489, 0.721227853, 1.537265001, 1.723354975]

se_nickel_10_0h = [9.808694308, 7.249904488, 6.992649813, 8.507540981, 9.938610789, 5.749924249, 6.413377047, 9.847311214, 4.923655607, 7.713004114, 5.489639613, 6.212173062]
se_nickel_10_1h = [6.13932366, 4.479465643, 5.588496693, 4.238476579, 6.679584142, 8.970836842, 9.032619465, 8.506277928, 5.900834549, 5.925437545, 7.699520643, 5.462276752, 8.131667651, 8.506277928, 9.782867333, 7.522798972]
se_nickel_10_4h = [6.310656799, 8.855813452, 6.634919796, 6.890109019, 11.10114413, 7.873805236, 11.63514921, 9.12301472, 8.719341502, 8.828723923, 11.88881556, 11.55857069, 9.263368793, 10.77824524, 11.06726376]
se_nickel_10_24h = [5.08443238, 5.735369264, 5.180972235, 5.658060649, 6.082967402, 2.697520145, 4.407811763, 5.43554856, 7.403301411, 6.2624648, 5.672452756, 4.128871295, 3.228256503, 3.670107817, 4.847450241]

times = np.array([0.1, 1.5, 4, 24])

# Means calculated 
means = {
    '100 mg/L': [
        np.mean(nickel_200_0h),
        np.mean(nickel_200_1h),
        np.mean(nickel_200_4h),
        np.mean(nickel_200_24h),
    ],
    '50 mg/L': [
        np.mean(nickel_100_0h),
        np.mean(nickel_100_1h),
        np.mean(nickel_100_4h),
        np.mean(nickel_100_24h),
    ],
    '25 mg/L': [
        np.mean(nickel_50_0h),
        np.mean(nickel_50_1h),
        np.mean(nickel_50_4h),
        np.mean(nickel_50_24h),
    ],
    '5 mg/L': [
        np.mean(nickel_10_0h),
        np.mean(nickel_10_1h),
        np.mean(nickel_10_4h),
        np.mean(nickel_10_24h),
    ]
}

def combined_se(se_list):
    se_array = np.array(se_list)
    n = len(se_array)
    return np.sqrt(np.sum(se_array**2)) / n

ses = {
    '100 mg/L': [
        combined_se(se_nickel_200_0h),
        combined_se(se_nickel_200_1h),
        combined_se(se_nickel_200_4h),
        combined_se(se_nickel_200_24h),
    ],
    '50 mg/L': [
        combined_se(se_nickel_100_0h),
        combined_se(se_nickel_100_1h),
        combined_se(se_nickel_100_4h),
        combined_se(se_nickel_100_24h),
    ],
    '25 mg/L': [
        combined_se(se_nickel_50_0h),
        combined_se(se_nickel_50_1h),
        combined_se(se_nickel_50_4h),
        combined_se(se_nickel_50_24h),
    ],
    '5 mg/L': [
        combined_se(se_nickel_10_0h),
        combined_se(se_nickel_10_1h),
        combined_se(se_nickel_10_4h),
        combined_se(se_nickel_10_24h),
    ],
}

# Calculate medians
medians = {
    '100 mg/L': [
        np.median(nickel_200_0h),
        np.median(nickel_200_1h),
        np.median(nickel_200_4h),
        np.median(nickel_200_24h),
    ],
    '50 mg/L': [
        np.median(nickel_100_0h),
        np.median(nickel_100_1h),
        np.median(nickel_100_4h),
        np.median(nickel_100_24h),
    ],
    '25 mg/L': [
        np.median(nickel_50_0h),
        np.median(nickel_50_1h),
        np.median(nickel_50_4h),
        np.median(nickel_50_24h),
    ],
    '5 mg/L': [
        np.median(nickel_10_0h),
        np.median(nickel_10_1h),
        np.median(nickel_10_4h),
        np.median(nickel_10_24h),
    ],
}

#print(medians)

# Save data
output_dir = Path(r"C:\Users\asus\OneDrive\Documents\MEBiom\TU\ME_part2\Plots\Motility_Plots")  # Change this to your desired folder path
output_dir.mkdir(parents=True, exist_ok=True)  # Create directory if it doesn't exist

output_filename = "nickel_motility_summary.txt"
output_path = output_dir / output_filename

with open(output_path, 'w') as f:
    f.write(f"{'Concentration':<16}{'Time(h)':<16}{'Mean':<16}{'SE':<16}{'Median'}\n")
    for conc in means:
        for t_idx, t in enumerate(times):
            f.write(f"{conc:<15}\t{t:<10}\t{means[conc][t_idx]:<10.2f}\t{ses[conc][t_idx]:<10.2f}\t{medians[conc][t_idx]:.2f}\n")

print(f"File saved at: {output_path.resolve()}")

# Plot data
colors = {
    '100 mg/L': 'blue',
    '50 mg/L': 'green',
    '25 mg/L': 'red',
    '5 mg/L': 'gold',
}

plt.figure(figsize=(14, 8))

for group in means:
    mean_vals = np.array(means[group])
    ci_margins = 1.96 * np.array(ses[group])  # 95% CI margins
    
    plt.plot(times, mean_vals, marker='o', label=group, color=colors[group])
    plt.fill_between(times, mean_vals - ci_margins, mean_vals + ci_margins, 
                     alpha=0.3, color=colors[group])

plt.title('Fraction of motile cells in nickel chloride relative to control', fontsize=20)
plt.xlabel('Time (hours)', fontsize=18)
plt.ylabel('Percentage of motile cells relative to control (%)', fontsize=18)
plt.xticks(times, ['0.1h', '1.5h', '4h', '24h'], fontsize=14)
plt.yticks(fontsize=14)
plt.legend(title='Nickel Chloride Group')
plt.grid(True)
plt.show()
